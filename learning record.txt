
极客时间：nginx核心知识100讲

    video-8: 从原码编译nginx
        nginx-1.16.0# ./configure  --prefix=your path && make && make install

    video-9: 配置语法
        1) 配置文件由指令块及指令组成。指令块由｛｝括起来；指令以';'结尾，用空格与参数隔开

    video-10: nginx命令行
        1) nginx -h
        2) 热部署
            > 替换旧版本的nginx二进制文件
            > 向当前运行的nginx进程发送消息     kill -USR2 nginx-master-pid
            > 向nginx的worker进程发送消息      kill -WINCH nginx-master-pid
        3) 日志切割
            > nginx -s reopen
            > 定时任务处理

    video-11: 配置静态资源服务器
        1) dlib(machine learning algorithms)，将它的docs文件夹拷贝到nginx的安装目录，然后改名为dlib
        2) 修改nginx.conf文件：
            > user root;            修改nginx-woker的用户权限，如果与启动用户不一致会导致403出错
            > server {
                listen  8080;

                location / {
                    alias   dlib/;
                }
            }
        3)  gzip on;                    启用gzip
            gzip_min_length     1;      
            gzip_comp_level     2;      压缩等级
            gzip_types  text/plain application/x-javascript text/css application/xml
                        text/javascript application/x-httpd-php image/jpeg image/gif image/png;
        4) autoindex on;
        5) set $limit_rate 1k;          限制传输的速率
        6) log_format   main            日志格式        access_log  存放的路径

    video-12: 搭建具备缓存功能的反向代理服务
        1) 搭建openresty服务器：openresty-1.15.8.1# ./configure --prefix=your path && make && make install
        2) 本实验搭建的nginx及openresty都在同一台主机上
        3) 修改nging的配置：(在video-11: 配置静态资源服务器实验的基础上)
            > server {
                listen  127.0.0.1:8080;     # 加上127.0.0.1后，只能本机的进程能访问到8080端口
            }
        4) 修改openresty的配置：(反向代理)
            > http {
                upstream local {
                    server 127.0.0.1:8080;
                }

                server {
                    listen  80;
                    servername  localhost;
                }

                location / {
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-forwrded-For $proxy_add_x_forwarded_for;
                    proxy_pass http://local;
                }
            }
        5) 修改openresty的配置：(缓存功能)
            > http {
                client_max_body_size    60M;
                proxy_cache_path    /tmp/nginxcache levels=1:2 keys_zone=my_cache:10m max_size=10g
                                    inactive=60m use_temp_path=off;
                
                location / {
                    proxy_cache my_cache;
                    proxy_cache_key $host$uri$is_args$args;
                    proxy_cache_valid 200 304 302 1d;
                }
            }

    video-13: GoAccess可视化并实时监控access日志
        1) 安装goaccess: yum install goaccess
        2) 运行的命令: goaccess access.log -o ../html/report.html --real-time-html --time-format='%H:%M:%S' --date-format='%d/%b/%Y' --log-format=COMBINED
        3) server {
                location /report.html {
                    alias /home/tkstation/openresty/nginx/html/report.html;
                }
            }
        4) 开放服务器的7890端口: sudo firewall-cmd --zone=public --add-port=7890/tcp --permanet && sudo firewall-cmd --reload
        5) 访问goaccess页面: http://192.168.1.101/report.html

    video-14: SSL安全协议

    video-15: 对称与非对称加密的应用场景

    video-16: SSL证书的公信力如何保证？
        1) 域名验证：domain validated, DV
        2) 组织验证：organization validated, OV
        3) 扩展验证：extended validated, EV

    video-17: SSL协议握手时nginx的性能瓶颈?

    video-18: 用免费SSL证书实现一个HTTP站点
        1) Let's encrypt数字证书认证机构，可以提供免费的SSL/TLS证书
        2) nginx编译时要带参数 --with-http_ssl_module
        3) 安装: sudo yum install python2-certbot-nginx 成功安装后会产生certbot命令
        4) certbot --nginx --nginx-server-root=/home/tkstation/nginx/conf -d www.laichujun.xyz
            3.1) 有两个选择1. No redirect    2. Redirect        选择 1